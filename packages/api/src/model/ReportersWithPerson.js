/**
 * UGC Guard API
 * API for UGC Guard. A tool to help you manage reports on user generated content.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Person from './Person';
import ReportCategory from './ReportCategory';

/**
 * The ReportersWithPerson model module.
 * @module model/ReportersWithPerson
 * @version 1.0.0
 */
class ReportersWithPerson {
    /**
     * Constructs a new <code>ReportersWithPerson</code>.
     * Reporters with person information.
     * @alias module:model/ReportersWithPerson
     * @param reportId {String} 
     * @param reporterId {String} 
     */
    constructor(reportId, reporterId) { 
        
        ReportersWithPerson.initialize(this, reportId, reporterId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reportId, reporterId) { 
        obj['report_id'] = reportId;
        obj['reporter_id'] = reporterId;
    }

    /**
     * Constructs a <code>ReportersWithPerson</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportersWithPerson} obj Optional instance to populate.
     * @return {module:model/ReportersWithPerson} The populated <code>ReportersWithPerson</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportersWithPerson();

            if (data.hasOwnProperty('report_id')) {
                obj['report_id'] = ApiClient.convertToType(data['report_id'], 'String');
            }
            if (data.hasOwnProperty('reporter_id')) {
                obj['reporter_id'] = ApiClient.convertToType(data['reporter_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('reporter_category')) {
                obj['reporter_category'] = ReportCategory.constructFromObject(data['reporter_category']);
            }
            if (data.hasOwnProperty('custom_message')) {
                obj['custom_message'] = ApiClient.convertToType(data['custom_message'], 'String');
            }
            if (data.hasOwnProperty('reporter')) {
                obj['reporter'] = Person.constructFromObject(data['reporter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportersWithPerson</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportersWithPerson</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReportersWithPerson.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['report_id'] && !(typeof data['report_id'] === 'string' || data['report_id'] instanceof String)) {
            throw new Error("Expected the field `report_id` to be a primitive type in the JSON string but got " + data['report_id']);
        }
        // ensure the json data is a string
        if (data['reporter_id'] && !(typeof data['reporter_id'] === 'string' || data['reporter_id'] instanceof String)) {
            throw new Error("Expected the field `reporter_id` to be a primitive type in the JSON string but got " + data['reporter_id']);
        }
        // ensure the json data is a string
        if (data['custom_message'] && !(typeof data['custom_message'] === 'string' || data['custom_message'] instanceof String)) {
            throw new Error("Expected the field `custom_message` to be a primitive type in the JSON string but got " + data['custom_message']);
        }
        // validate the optional field `reporter`
        if (data['reporter']) { // data not null
          Person.validateJSON(data['reporter']);
        }

        return true;
    }


}

ReportersWithPerson.RequiredProperties = ["report_id", "reporter_id"];

/**
 * @member {String} report_id
 */
ReportersWithPerson.prototype['report_id'] = undefined;

/**
 * @member {String} reporter_id
 */
ReportersWithPerson.prototype['reporter_id'] = undefined;

/**
 * @member {Date} created_at
 */
ReportersWithPerson.prototype['created_at'] = undefined;

/**
 * @member {module:model/ReportCategory} reporter_category
 */
ReportersWithPerson.prototype['reporter_category'] = undefined;

/**
 * @member {String} custom_message
 */
ReportersWithPerson.prototype['custom_message'] = undefined;

/**
 * @member {module:model/Person} reporter
 */
ReportersWithPerson.prototype['reporter'] = undefined;






export default ReportersWithPerson;

