/**
 * UGC Guard API
 * API for UGC Guard. A tool to help you manage reports on user generated content.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModuleStats from './ModuleStats';

/**
 * The ComparedModuleState model module.
 * @module model/ComparedModuleState
 * @version 1.0.0
 */
class ComparedModuleState {
    /**
     * Constructs a new <code>ComparedModuleState</code>.
     * The stats now vs the stats before a certain date.
     * @alias module:model/ComparedModuleState
     * @param now {module:model/ModuleStats} 
     * @param prior {module:model/ModuleStats} 
     * @param priorDate {Date} 
     */
    constructor(now, prior, priorDate) { 
        
        ComparedModuleState.initialize(this, now, prior, priorDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, now, prior, priorDate) { 
        obj['now'] = now;
        obj['prior'] = prior;
        obj['prior_date'] = priorDate;
    }

    /**
     * Constructs a <code>ComparedModuleState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComparedModuleState} obj Optional instance to populate.
     * @return {module:model/ComparedModuleState} The populated <code>ComparedModuleState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComparedModuleState();

            if (data.hasOwnProperty('now')) {
                obj['now'] = ModuleStats.constructFromObject(data['now']);
            }
            if (data.hasOwnProperty('prior')) {
                obj['prior'] = ModuleStats.constructFromObject(data['prior']);
            }
            if (data.hasOwnProperty('prior_date')) {
                obj['prior_date'] = ApiClient.convertToType(data['prior_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComparedModuleState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComparedModuleState</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ComparedModuleState.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `now`
        if (data['now']) { // data not null
          ModuleStats.validateJSON(data['now']);
        }
        // validate the optional field `prior`
        if (data['prior']) { // data not null
          ModuleStats.validateJSON(data['prior']);
        }

        return true;
    }


}

ComparedModuleState.RequiredProperties = ["now", "prior", "prior_date"];

/**
 * @member {module:model/ModuleStats} now
 */
ComparedModuleState.prototype['now'] = undefined;

/**
 * @member {module:model/ModuleStats} prior
 */
ComparedModuleState.prototype['prior'] = undefined;

/**
 * @member {Date} prior_date
 */
ComparedModuleState.prototype['prior_date'] = undefined;






export default ComparedModuleState;

