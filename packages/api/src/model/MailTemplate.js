/**
 * UGC Guard API
 * API for UGC Guard. A tool to help you manage reports on user generated content.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MailTemplateType from './MailTemplateType';

/**
 * The MailTemplate model module.
 * @module model/MailTemplate
 * @version 1.0.0
 */
class MailTemplate {
    /**
     * Constructs a new <code>MailTemplate</code>.
     * Model for MailTemplate. This is used to store the templates for emails.
     * @alias module:model/MailTemplate
     * @param type {module:model/MailTemplateType} 
     * @param moduleId {String} 
     */
    constructor(type, moduleId) { 
        
        MailTemplate.initialize(this, type, moduleId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, moduleId) { 
        obj['type'] = type;
        obj['module_id'] = moduleId;
    }

    /**
     * Constructs a <code>MailTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MailTemplate} obj Optional instance to populate.
     * @return {module:model/MailTemplate} The populated <code>MailTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MailTemplate();

            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = MailTemplateType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('module_id')) {
                obj['module_id'] = ApiClient.convertToType(data['module_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MailTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MailTemplate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MailTemplate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['module_id'] && !(typeof data['module_id'] === 'string' || data['module_id'] instanceof String)) {
            throw new Error("Expected the field `module_id` to be a primitive type in the JSON string but got " + data['module_id']);
        }

        return true;
    }


}

MailTemplate.RequiredProperties = ["type", "module_id"];

/**
 * @member {String} subject
 */
MailTemplate.prototype['subject'] = undefined;

/**
 * @member {String} body
 */
MailTemplate.prototype['body'] = undefined;

/**
 * @member {module:model/MailTemplateType} type
 */
MailTemplate.prototype['type'] = undefined;

/**
 * @member {String} id
 */
MailTemplate.prototype['id'] = undefined;

/**
 * @member {String} module_id
 */
MailTemplate.prototype['module_id'] = undefined;

/**
 * @member {Date} created_at
 */
MailTemplate.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
MailTemplate.prototype['updated_at'] = undefined;






export default MailTemplate;

