/**
 * UGC Guard API
 * API for UGC Guard. A tool to help you manage reports on user generated content.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentPublic from './ContentPublic';

/**
 * The AllContentResponse model module.
 * @module model/AllContentResponse
 * @version 1.0.0
 */
class AllContentResponse {
    /**
     * Constructs a new <code>AllContentResponse</code>.
     * The content data for a report
     * @alias module:model/AllContentResponse
     * @param context {Array.<module:model/ContentPublic>} 
     */
    constructor(context) { 
        
        AllContentResponse.initialize(this, context);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, context) { 
        obj['context'] = context;
    }

    /**
     * Constructs a <code>AllContentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllContentResponse} obj Optional instance to populate.
     * @return {module:model/AllContentResponse} The populated <code>AllContentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllContentResponse();

            if (data.hasOwnProperty('main_content')) {
                obj['main_content'] = ContentPublic.constructFromObject(data['main_content']);
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], [ContentPublic]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllContentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllContentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AllContentResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `main_content`
        if (data['main_content']) { // data not null
          ContentPublic.validateJSON(data['main_content']);
        }
        if (data['context']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['context'])) {
                throw new Error("Expected the field `context` to be an array in the JSON data but got " + data['context']);
            }
            // validate the optional field `context` (array)
            for (const item of data['context']) {
                ContentPublic.validateJSON(item);
            };
        }

        return true;
    }


}

AllContentResponse.RequiredProperties = ["context"];

/**
 * @member {module:model/ContentPublic} main_content
 */
AllContentResponse.prototype['main_content'] = undefined;

/**
 * @member {Array.<module:model/ContentPublic>} context
 */
AllContentResponse.prototype['context'] = undefined;






export default AllContentResponse;

